{"version":3,"sources":["components/XOElement/XOElement.module.css","components/XOGame/XOGame.module.css","components/App.module.css","components/XOField/XOField.module.css","helpers/game.ts","components/XOField/XOField.tsx","helpers/classnames.ts","components/XOElement/XOElement.tsx","components/XOGame/XOGame.tsx","components/App.tsx","index.tsx"],"names":["module","exports","XOElementType","XOField","width","height","renderElement","cssVars","elements","Array","fill","map","_","index","x","y","Math","floor","className","styles","container","style","mix","args","filter","Boolean","join","GameStateStatus","generatePosition","winnerRange","c","classes","appear","appearActive","appearDone","exit","exitActive","exitDone","XOElement","type","CSSTransition","in","mountOnEnter","timeout","classNames","element","O","generateElementKey","Element","props","onClick","useCallback","key","XOGame","useState","status","Process","gameState","setGameState","X","symbol","setSymbol","game","setGame","onElementClick","position","Cancelled","updatedGame","range","xoType","every","winner","Object","keys","length","getGameState","isOnWinnerRange","some","onRestartGame","toUpperCase","restart","App","app","header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db25ccf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"XOElement_element__1KEMr\",\"element-appear\":\"XOElement_element-appear__1ES5B\",\"element-appear-done\":\"XOElement_element-appear-done__WJCRD\",\"element-appear-active\":\"XOElement_element-appear-active__136G1\",\"element-exit\":\"XOElement_element-exit__1_0jh\",\"element-exit-done\":\"XOElement_element-exit-done__6EZ22\",\"element-exit-active\":\"XOElement_element-exit-active__2EGW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"XOGame_game__15uXp\",\"container\":\"XOGame_container__1yCti\",\"element\":\"XOGame_element__1MduJ\",\"winner-element\":\"XOGame_winner-element__3AreA\",\"game-info\":\"XOGame_game-info__2wluV\",\"winner\":\"XOGame_winner__X4RP5\",\"restart\":\"XOGame_restart__27bp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\",\"header\":\"App_header__14Wxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"XOField_container__3ahhw\"};","export enum XOElementType {\n    X = 'x',\n    O = 'o'\n}\n\nexport const generatePosition = (x: number, y: number) => `${x}-${y}`;\n\nexport type XOGameField = {\n    [key: string]: XOElementType;\n}\nexport type XORange = [string, string, string];\nconst winnerRange: Array<XORange> = [\n    [0, 1, 2].map(x => generatePosition(x, 0)) as XORange,\n    [0, 1, 2].map(x => generatePosition(x, 1)) as XORange,\n    [0, 1, 2].map(x => generatePosition(x, 2)) as XORange,\n    [0, 1, 2].map(y => generatePosition(0, y)) as XORange,\n    [0, 1, 2].map(y => generatePosition(1, y)) as XORange,\n    [0, 1, 2].map(y => generatePosition(2, y)) as XORange,\n    [0, 1, 2].map(c => generatePosition(c, c)) as XORange,\n    [0, 1, 2].map(c => generatePosition(c, 2 - c)) as XORange,\n];\n\nexport enum GameStateStatus {\n    Cancelled = 'cancelled',\n    Process = 'process',\n}\nexport type GameState =\n    | { status: GameStateStatus.Cancelled, winner: XOElementType, range: XORange }\n    | { status: GameStateStatus.Cancelled }\n    | { status: GameStateStatus.Process }\nexport const getGameState = (game: XOGameField): GameState => {\n    for (const range of winnerRange) {\n        let xoType = game[range[0]];\n\n        if (xoType && range.every(key => game[key] === xoType)) {\n            return { status: GameStateStatus.Cancelled, winner: xoType, range };\n        }\n    }\n\n    if (Object.keys(game).length === 9) {\n        return { status: GameStateStatus.Cancelled };\n    }\n\n    return { status: GameStateStatus.Process };\n};\n","import React from 'react';\n\nimport styles from './XOField.module.css';\n\ntype Props = {\n    width: number;\n    height: number;\n    renderElement: (x: number, y: number) => React.ReactNode\n};\nconst XOField: React.FC<Props> = ({ width, height, renderElement }) => {\n    const cssVars = {\n        '--xo-game-width': width,\n        '--xo-game-height': height,\n    };\n\n    const elements = Array(width * height)\n        .fill(null)\n        .map((_, index) => {\n            const x = index % height;\n            const y = Math.floor(index / width);\n\n            return renderElement(x, y);\n        });\n\n    return (\n        <div className={styles.container} style={cssVars as React.CSSProperties}>\n            {elements}\n        </div>\n    );\n};\n\nexport default XOField;\n","export const mix = (...args: Array<string|undefined|null|false>) => {\n    return args.filter(Boolean).join(' ');\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { mix } from '../../helpers/classnames';\nimport { XOElementType } from '../../helpers/game';\n\nimport styles from './XOElement.module.css';\n\nconst classes = {\n    appear: styles['element-appear'],\n    appearActive: styles['element-appear-active'],\n    appearDone: styles['element-appear-done'],\n    exit: styles['element-exit'],\n    exitActive: styles['element-exit-active'],\n    exitDone: styles['element-exit-done'],\n};\n\nexport type Props = {\n    type?: XOElementType\n};\nconst XOElement: React.FC<Props> = ({ type }) => {\n    return (\n        <CSSTransition\n            in={Boolean(type)}\n            appear\n            mountOnEnter\n            timeout={1000}\n            classNames={classes}\n        >\n            <div className={mix(styles.element, type && styles[type])}>\n                {type ? type === XOElementType.O ? 'O' : 'X' : '' }\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default XOElement;\n","import React, { useCallback, useState } from 'react';\n\nimport styles from './XOGame.module.css';\n\nimport XOField from '../XOField/XOField';\nimport XOElement from '../XOElement/XOElement';\nimport {\n    GameState,\n    GameStateStatus,\n    generatePosition,\n    getGameState,\n    XOElementType,\n    XOGameField,\n} from '../../helpers/game';\nimport { mix } from '../../helpers/classnames';\n\nconst generateElementKey = (x: number, y: number, type?: XOElementType) => (\n    `${generatePosition(x, y)}${type ? `-${type}` : ''}`\n);\n\ntype ElementProps = {\n    x: number;\n    y: number;\n    onClick: (x: number, y: number) => void;\n    type?: XOElementType;\n    className?: string;\n};\nconst Element: React.FC<ElementProps> = props => {\n    const { x, y, type, className } = props;\n    const onClick = useCallback(() => {\n        props.onClick(props.x, props.y);\n    }, [props]);\n\n    return (\n        <div\n            key={generateElementKey(x, y, type)}\n            className={styles.container}\n            onClick={onClick}\n        >\n            <div className={mix(styles.element, className)} >\n                <XOElement type={type} />\n            </div>\n        </div>\n    );\n};\n\nconst XOGame: React.FC = () => {\n    const [gameState, setGameState] = useState<GameState>({ status: GameStateStatus.Process });\n    const [symbol, setSymbol] = useState(XOElementType.X);\n    const [game, setGame] = useState<XOGameField>({});\n\n    const onElementClick = useCallback((x: number, y: number) => {\n        const position = generatePosition(x, y);\n\n        if (game[position] || gameState.status === GameStateStatus.Cancelled) {\n            return;\n        }\n\n        const updatedGame = { ...game, [position]: symbol };\n\n        setGame(updatedGame);\n        setSymbol(symbol === XOElementType.O ? XOElementType.X : XOElementType.O);\n        setGameState(getGameState(updatedGame));\n    }, [game, gameState.status, symbol, setSymbol, setGame, setGameState]);\n\n    const renderElement = useCallback((x: number, y: number) => {\n        const position = generatePosition(x, y);\n        const isOnWinnerRange = ('range' in gameState) &&\n            gameState.range.some(key => key === position);\n\n        return (\n            <Element\n                key={generateElementKey(x, y, game[position])}\n                x={x}\n                y={y}\n                type={game[position]}\n                onClick={onElementClick}\n                className={isOnWinnerRange ? styles['winner-element'] : ''}\n            />\n        );\n    }, [game, onElementClick, gameState.status]);\n\n    const onRestartGame = useCallback(() => {\n        setGameState({ status: GameStateStatus.Process });\n        setGame({});\n    }, [setGame]);\n\n    return (\n        <div className={styles.game}>\n            <XOField\n                width={3}\n                height={3}\n                renderElement={renderElement}\n            />\n            {gameState.status === GameStateStatus.Cancelled && (\n                <div className={styles['game-info']}>\n                    {('winner' in gameState) && (\n                        <div className={styles.winner}>\n                            Победили {gameState.winner.toUpperCase()}\n                        </div>\n                    )}\n                    <button onClick={onRestartGame} className={styles.restart}>Играть заново</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default XOGame;\n","import React from 'react';\n\nimport XOGame from './XOGame/XOGame';\n\nimport styles from './App.module.css';\n\nfunction App() {\n    return (\n        <div className={styles.app}>\n            <header className={styles.header}>\n                Величайшая победа – победа над самим собой!\n            </header>\n            <XOGame />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}