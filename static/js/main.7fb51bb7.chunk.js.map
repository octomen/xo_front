{"version":3,"sources":["components/XOElement/XOElement.module.css","components/XOGame/XOGame.module.css","components/App.module.css","components/XOField/XOField.module.css","helpers/gameWebsocket.ts","components/XOField/XOField.tsx","helpers/classnames.ts","components/XOElement/XOElement.tsx","hooks/useGame.ts","components/XOGame/XOGame.tsx","components/App.tsx","index.tsx"],"names":["module","exports","GameStatus","BoardElements","ActionType","XOField","width","height","renderElement","cssVars","elements","Array","fill","map","_","index","x","y","Math","floor","className","styles","container","style","mix","args","filter","Boolean","join","wsGameMap","Map","removeGameWebsocket","gameId","has","get","close","delete","classes","appear","appearActive","appearDone","exit","exitActive","exitDone","symbolMap","N","X","O","XOElement","type","CSSTransition","in","mountOnEnter","timeout","classNames","element","useGame","useState","game","setGame","useEffect","gameWS","set","WebSocket","uuid","createGameWebsocket","onmessage","event","data","payload","board","JSON","parse","status","Move","error","console","onclose","info","onerror","generateElementKey","isGameFinished","Lose","Won","includes","Element","props","onClick","useCallback","key","XOGame","id","onGameCreate","onElementClick","move","Error","send","stringify","sendGameMove","onRestartGame","winner","restart","App","window","location","reload","app","header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fb51bb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"XOElement_element__1KEMr\",\"element-appear\":\"XOElement_element-appear__1ES5B\",\"element-appear-done\":\"XOElement_element-appear-done__WJCRD\",\"element-appear-active\":\"XOElement_element-appear-active__136G1\",\"element-exit\":\"XOElement_element-exit__1_0jh\",\"element-exit-done\":\"XOElement_element-exit-done__6EZ22\",\"element-exit-active\":\"XOElement_element-exit-active__2EGW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"XOGame_game__15uXp\",\"container\":\"XOGame_container__1yCti\",\"element\":\"XOGame_element__1MduJ\",\"winner-element\":\"XOGame_winner-element__3AreA\",\"game-info\":\"XOGame_game-info__2wluV\",\"winner\":\"XOGame_winner__X4RP5\",\"restart\":\"XOGame_restart__27bp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\",\"header\":\"App_header__14Wxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"XOField_container__3ahhw\"};","import { v4 as uuid } from 'uuid';\n\nconst SERVER_URL = 'ws://37.140.186.91:8000/game';\n\nconst wsGameMap: Map<string, WebSocket> = new Map();\n\nexport enum GameStatus {\n    Move = 'MOVE',\n    Waiting = 'WAITING',\n    Won = 'WON',\n    Lose = 'LOSE',\n}\nexport enum BoardElements {\n    X = 'x',\n    O = 'o',\n    N = 'n',\n}\nexport type BoardRow = [BoardElements, BoardElements, BoardElements];\nexport type Board = [BoardRow, BoardRow, BoardRow];\nexport type GamePayload = {\n    board: Board;\n    status: GameStatus;\n}\nexport enum ActionType {\n    UpdateState = 'UPDATE_STATE'\n}\n\nexport const createGameWebsocket = (gameId: string) => {\n    if (wsGameMap.has(gameId)) {\n        return wsGameMap.get(gameId)!;\n    }\n\n    wsGameMap.set(gameId, new WebSocket(`${SERVER_URL}/${gameId}/${uuid()}`));\n\n    return wsGameMap.get(gameId)!;\n};\n\nexport const removeGameWebsocket = (gameId: string) => {\n    if (wsGameMap.has(gameId)) {\n        wsGameMap.get(gameId)!.close(1000, 'Игра завершена');\n    }\n\n    return wsGameMap.delete(gameId);\n};\n\nexport const parseGameWebsocketMessage = (data: string) => {\n    const board = JSON.parse(data);\n\n    return {\n        payload: {\n            board,\n            status: GameStatus.Move,\n        }\n    };\n};\n\nexport const sendGameMove = (gameId: string, move: [number, number]) => {\n    if (!wsGameMap.get(gameId)) {\n        throw new Error(`игры с id=${gameId} не существует`);\n    }\n\n    wsGameMap.get(gameId)!.send(JSON.stringify(move));\n};\n\n\n","import React from 'react';\n\nimport styles from './XOField.module.css';\n\ntype Props = {\n    width: number;\n    height: number;\n    renderElement: (x: number, y: number) => React.ReactNode\n};\nconst XOField: React.FC<Props> = ({ width, height, renderElement }) => {\n    const cssVars = {\n        '--xo-game-width': width,\n        '--xo-game-height': height,\n    };\n\n    const elements = Array(width * height)\n        .fill(null)\n        .map((_, index) => {\n            const x = index % height;\n            const y = Math.floor(index / width);\n\n            return renderElement(x, y);\n        });\n\n    return (\n        <div className={styles.container} style={cssVars as React.CSSProperties}>\n            {elements}\n        </div>\n    );\n};\n\nexport default XOField;\n","export const mix = (...args: Array<string|undefined|null|false>) => {\n    return args.filter(Boolean).join(' ');\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { mix } from '../../helpers/classnames';\nimport { BoardElements } from '../../helpers/gameWebsocket';\n\nimport styles from './XOElement.module.css';\n\nconst classes = {\n    appear: styles['element-appear'],\n    appearActive: styles['element-appear-active'],\n    appearDone: styles['element-appear-done'],\n    exit: styles['element-exit'],\n    exitActive: styles['element-exit-active'],\n    exitDone: styles['element-exit-done'],\n};\n\nconst symbolMap = {\n    [BoardElements.N]: '',\n    [BoardElements.X]: 'X',\n    [BoardElements.O]: 'O',\n};\n\nexport type Props = {\n    type: BoardElements\n};\nconst XOElement: React.FC<Props> = ({ type }) => {\n    return (\n        <CSSTransition\n            in={Boolean(type)}\n            appear\n            mountOnEnter\n            timeout={1000}\n            classNames={classes}\n        >\n            <div className={mix(styles.element, type && styles[type])}>\n                {symbolMap[type]}\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default XOElement;\n","import { useEffect, useState } from 'react';\n\nimport {\n    ActionType,\n    GamePayload,\n    createGameWebsocket,\n    parseGameWebsocketMessage,\n    removeGameWebsocket\n} from '../helpers/gameWebsocket';\n\nexport function useGame(gameId: string) {\n    const [game, setGame] = useState<GamePayload>();\n\n    useEffect(() => {\n        const gameWS = createGameWebsocket(gameId);\n\n        gameWS.onmessage = (event) => {\n            try {\n                const { payload } = parseGameWebsocketMessage(event.data);\n\n                setGame(payload);\n            } catch (error) {\n                console.error(`Не удалось распарсить сообщение`, error);\n            }\n        };\n        gameWS.onclose = (event) => {\n            removeGameWebsocket(gameId);\n            console.info('Соединение закрыто:', event);\n        };\n        gameWS.onerror = (error) => {\n            console.error(`Ошибка соединения`, error);\n        };\n\n        return () => {\n            gameWS.close(1000, 'Изменился идентификатор игры');\n        };\n    }, [gameId]);\n\n    return game;\n}\n","import React, { useCallback } from 'react';\n\nimport XOField from '../XOField/XOField';\nimport XOElement from '../XOElement/XOElement';\n\nimport { mix } from '../../helpers/classnames';\nimport { BoardElements, GameStatus, removeGameWebsocket, sendGameMove } from '../../helpers/gameWebsocket';\nimport { useGame } from '../../hooks/useGame';\n\nimport styles from './XOGame.module.css';\n\nconst generateElementKey = (x: number, y: number, type: BoardElements) => `${x}-${y}-${type}`;\n\nconst isGameFinished = (status: GameStatus) => [GameStatus.Lose, GameStatus.Won].includes(status);\n\ntype ElementProps = {\n    x: number;\n    y: number;\n    type: BoardElements;\n    onClick: (x: number, y: number) => void;\n    className?: string;\n};\nconst Element: React.FC<ElementProps> = props => {\n    const { x, y, type, className } = props;\n    const onClick = useCallback(() => {\n        props.onClick(props.x, props.y);\n    }, [props]);\n\n    return (\n        <div\n            key={generateElementKey(x, y, type)}\n            className={styles.container}\n            onClick={onClick}\n        >\n            <div className={mix(styles.element, className)} >\n                <XOElement type={type} />\n            </div>\n        </div>\n    );\n};\ntype Props = {\n    id: string;\n    onGameCreate: () => void;\n}\nconst XOGame: React.FC<Props> = ({ id, onGameCreate }) => {\n    const game = useGame(id);\n\n    const onElementClick = useCallback((x: number, y: number) => {\n        if (!game) {\n            return;\n        }\n\n        const { board } = game;\n        const element = board[y][x];\n\n        if (element !== BoardElements.N || isGameFinished(game.status)) {\n            return;\n        }\n\n        sendGameMove(id, [y, x]);\n    }, [game, id]);\n\n    const renderElement = useCallback((x: number, y: number) => {\n        if (!game) {\n            return null;\n        }\n\n        return (\n            <Element\n                key={generateElementKey(x, y, game.board[y][x])}\n                x={x}\n                y={y}\n                type={game.board[y][x]}\n                onClick={onElementClick}\n                className={isGameFinished(game.status) ? styles['winner-element'] : ''}\n            />\n        );\n    }, [game, onElementClick]);\n\n    const onRestartGame = useCallback(() => {\n        removeGameWebsocket(id);\n\n        onGameCreate();\n    }, [id, onGameCreate]);\n\n    return (\n        <div className={styles.game}>\n            <XOField\n                width={3}\n                height={3}\n                renderElement={renderElement}\n            />\n            <div className={styles['game-info']}>\n                {game && isGameFinished(game.status) && (\n                    <div className={styles.winner}>\n                        {game.status === GameStatus.Won ?\n                            'Вы победили!' :\n                            'Вы проиграли'\n                        }\n                    </div>\n                )}\n                <button onClick={onRestartGame} className={styles.restart}>Играть заново</button>\n            </div>\n        </div>\n    );\n};\n\nexport default XOGame;\n","import React, { useCallback } from 'react';\n\nimport XOGame from './XOGame/XOGame';\n\nimport styles from './App.module.css';\n\nfunction App() {\n    const onGameCreate = useCallback(() => {\n        window.location.reload();\n    }, []);\n\n    return (\n        <div className={styles.app}>\n            <header className={styles.header}>\n                Величайшая победа – победа над самим собой!\n            </header>\n            <XOGame id='123' onGameCreate={onGameCreate} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}